syntax = "proto3";

package pathwar.entity;

import "github.com/golang/protobuf/ptypes/timestamp/timestamp.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option go_package = "pathwar.pw/entity";
option (gogoproto.sizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

message Metadata {
  string id = 1 [(gogoproto.moretags) = "gorm:\"primary_key\"", (gogoproto.customname) = "ID"];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  //google.protobuf.Timestamp deleted_at = 4 [(gogoproto.stdtime) = true];
}

message TeamMember {
  Metadata metadata = 1 [(gogoproto.nullable) = false, (gogoproto.embed) = true];

  //
  // fields
  //

  enum Role {
    Undefined = 0;
    Owner = 1;
    Basic = 2;
  }
  Role role = 100;

  //
  // associations
  //

  User user = 200 [(gogoproto.moretags) = "gorm:\"foreignkey:UserID\""];
  string user_id = 201 [(gogoproto.customname) = "UserID", (gogoproto.moretags) = "sql:\"type:string not null REFERENCES user(id)\" gorm:\"index\""];

  TournamentTeam tournament_team = 202 [(gogoproto.moretags) = "gorm:\"foreignkey:TournamentTeamID\""];
  string tournament_team_id = 203 [(gogoproto.customname) = "TournamentTeamID", (gogoproto.moretags) = "sql:\"type:string not null REFERENCES tournament_team(id)\" gorm:\"index\""];
}

// User definces a User Account / Profile
message User {
  Metadata metadata = 1 [(gogoproto.nullable) = false, (gogoproto.embed) = true];

  //
  // fields
  //

  string username = 100;
  string email = 101;
  string password_hash = 102;
  string password_salt = 103;
  string ssh_key = 104;

  //
  // associations
  //

  repeated UserSession sessions = 200; // HasMany
  repeated TeamMember team_memberships = 201; // Many2Many
}

message UserSession {
  Metadata metadata = 1 [(gogoproto.nullable) = false, (gogoproto.embed) = true];

  //
  // fields
  //

  string username = 100;

  //
  // associations
  //

  string user_id = 200 [(gogoproto.customname) = "UserID"]; // HasOne
}

message Team {
  Metadata metadata = 1 [(gogoproto.nullable) = false, (gogoproto.embed) = true];

  //
  // fields
  //

  string name = 100;
  string gravatar_url = 101;

  //
  // associations
  //

  repeated TeamMember members = 200; // HasMany
}

message Level {
  Metadata metadata = 1 [(gogoproto.nullable) = false, (gogoproto.embed) = true];

  //
  // fields
  //

  string name = 100;
  string description = 101;
  string author = 102;
  string source_url = 103;
  string version = 104;
  string lang = 105;
  bool is_draft = 106;
  // repeated string tags = 107;

  //
  // associations
  //
}

message Tournament {
  Metadata metadata = 1 [(gogoproto.nullable) = false, (gogoproto.embed) = true];

  //
  // fields
  //

  //
  // associations
  //
}

message TournamentTeam {
  Metadata metadata = 1 [(gogoproto.nullable) = false, (gogoproto.embed) = true];

  //
  // fields
  //

  //
  // associations
  //

  Tournament tournament = 200 [(gogoproto.moretags) = "gorm:\"foreignkey:TournamentID\""];
  string tournament_id = 201 [(gogoproto.customname) = "TournamentID", (gogoproto.moretags) = "sql:\"type:string not null REFERENCES tournament(id)\" gorm:\"index\""];
}

message WhoswhoAttempt {
  Metadata metadata = 1 [(gogoproto.nullable) = false, (gogoproto.embed) = true];

  //
  // fields
  //

  //
  // associations
  //
}

message LevelSubscription {
  Metadata metadata = 1 [(gogoproto.nullable) = false, (gogoproto.embed) = true];

  //
  // fields
  //

  //
  // associations
  //

  TournamentTeam tournament_team = 200 [(gogoproto.moretags) = "gorm:\"foreignkey:TournamentTeamID\""];
  string tournament_team_id = 201 [(gogoproto.customname) = "TournamentTeamID", (gogoproto.moretags) = "sql:\"type:string not null REFERENCES tournament_team(id)\" gorm:\"index\""];
}

message ShopItem {
  Metadata metadata = 1 [(gogoproto.nullable) = false, (gogoproto.embed) = true];

  //
  // fields
  //

  //
  // associations
  //

  TournamentTeam tournament_team = 200 [(gogoproto.moretags) = "gorm:\"foreignkey:TournamentTeamID\""];
  string tournament_team_id = 201 [(gogoproto.customname) = "TournamentTeamID", (gogoproto.moretags) = "sql:\"type:string not null REFERENCES tournament_team(id)\" gorm:\"index\""];
}

message LevelFlavor {
  Metadata metadata = 1 [(gogoproto.nullable) = false, (gogoproto.embed) = true];

  //
  // fields
  //

  //
  // associations
  //
}

message LevelInstance {
  Metadata metadata = 1 [(gogoproto.nullable) = false, (gogoproto.embed) = true];

  //
  // fields
  //

  //
  // associations
  //
  Hypervisor hypervisor = 200 [(gogoproto.moretags) = "gorm:\"foreignkey:HypervisorID\""];
  string hypervisor_id = 201 [(gogoproto.customname) = "HypervisorID", (gogoproto.moretags) = "sql:\"type:string not null REFERENCES hypervisor(id)\" gorm:\"index\""];
}

message Hypervisor {
  Metadata metadata = 1 [(gogoproto.nullable) = false, (gogoproto.embed) = true];

  //
  // fields
  //

  //
  // associations
  //
}

message Event {
  Metadata metadata = 1 [(gogoproto.nullable) = false, (gogoproto.embed) = true];

  //
  // fields
  //

  //
  // associations
  //
}

message Notification {
  Metadata metadata = 1 [(gogoproto.nullable) = false, (gogoproto.embed) = true];

  //
  // fields
  //

  //
  // associations
  //
}

message Coupon {
  Metadata metadata = 1 [(gogoproto.nullable) = false, (gogoproto.embed) = true];

  //
  // fields
  //
  int32 value = 100;

  //
  // associations
  //
  TeamMember team_member = 200 [(gogoproto.moretags) = "gorm:\"foreignkey:TeamMemberID\""];
  string team_member_id = 201 [(gogoproto.customname) = "TeamMemberID", (gogoproto.moretags) = "sql:\"type:string REFERENCES team_member(id)\" gorm:\"index\""];
}

message Achievement {
  Metadata metadata = 1 [(gogoproto.nullable) = false, (gogoproto.embed) = true];

  //
  // fields
  //
  enum Type {
    Undefined = 0;
    Buy1LevelAchievement = 1;
    Buy5LevelsAchievement = 2;
    Buy10LevelsAchievements = 3;
    Buy20LevelsAchievements = 4;
    Buy50LevelsAchievements = 5;
    Buy100LevelsAchievements = 6;
    Buy200LevelsAchievements = 7;
    Buy500LevelsAchievements = 8;
    Buy1000LevelsAchievements = 9;
    Validate1LevelAchievement = 10;
    Validate5LevelsAchievement = 11;
    Validate10LevelsAchievements = 12;
    Validate20LevelsAchievements = 13;
    Validate50LevelsAchievements = 14;
    Validate100LevelsAchievements = 15;
    Validate200LevelsAchievements = 16;
    Validate500LevelsAchievements = 17;
    Validate1000LevelsAchievements = 18;
    Validate1Coupon = 19;
    Validate5Coupons = 20;
    Validate10Coupons = 21;
    Validate20Coupons = 22;
    Validate50Coupons = 23;
    Validate100Coupons = 24;
    Validate200Coupons = 25;
    Validate500Coupons = 26;
    Validate1000Coupons = 27;
    // Special = 99;
  }
  Type type = 100;

  //
  // associations
  //

  TeamMember team_member = 200 [(gogoproto.moretags) = "gorm:\"foreignkey:TeamMemberID\""];
  string team_member_id = 201 [(gogoproto.customname) = "TeamMemberID", (gogoproto.moretags) = "sql:\"type:string not null REFERENCES team_member(id)\" gorm:\"index\""];
}

message Dump {
  // non-gorm entity -> no metadata

  //
  // associations
  //

  repeated UserSession user_sessions = 1;
  repeated Level levels = 2;
  repeated User users = 3;
  repeated TeamMember team_members = 4;
  repeated Team teams = 5;
}
